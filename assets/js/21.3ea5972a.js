(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{380:function(t,n,s){"use strict";s.r(n);var a=s(25),e=Object(a.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"插件开发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插件开发"}},[t._v("#")]),t._v(" 插件开发")]),t._v(" "),s("p",[t._v("要开发一个插件非常简单：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("在 "),s("code",[t._v("gateway/app/plugins")]),t._v(" 目录下创建一个lua文件，如："),s("code",[t._v("demo_plugin.lua")])])]),t._v(" "),s("li",[s("p",[t._v("在各钩子函数中编写对应方法，如果在对应阶段不需要处理可以不定义该阶段对应的钩子函数。各阶段钩子函数参考文档："),s("a",{attrs:{href:"https://moonbingbing.gitbooks.io/openresty-best-practices/content/ngx_lua/phase.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://moonbingbing.gitbooks.io/openresty-best-practices/content/ngx_lua/phase.html"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- gateway/app/plugins/demo_plugin.lua")]),t._v("\n\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("local")]),t._v(" _M "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"demo"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     desc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"测试插件"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     version "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 对应 init 阶段")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" _M"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("do_in_init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("route"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- body")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 对应 init_worker 阶段")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" _M"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("do_in_init_worker")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("route"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- body")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 对应 rewrite 阶段")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" _M"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("do_in_rewrite")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("route"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- body")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 对应 access 阶段")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" _M"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("do_in_access")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("route"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- body")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 对应 content 阶段")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" _M"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("do_in_content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("route"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- body")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 对应 balancer 阶段")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" _M"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("do_in_balancer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("route"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- body")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 对应 body_filter 阶段")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" _M"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("do_in_body_filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("route"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- body")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 对应 log 阶段")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" _M"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("do_in_log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("route"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- body")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" _M\n")])])]),s("p",[t._v("参数 route 是一个 table")]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[t._v("route "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    prefix\n    status\n    service_name\n    protocol\n    plugins\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("需要注意的是，init 和 init_worker 阶段不能发起网络请求，需要在 "),s("code",[t._v("ngx.timer")]),t._v(" 中执行，这个是 openresty 本身的限制")])])])]),t._v(" "),s("h1",{attrs:{id:"插件注册"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插件注册"}},[t._v("#")]),t._v(" 插件注册")]),t._v(" "),s("p",[t._v("修改 "),s("code",[t._v("conf/app.json")]),t._v("，在 plugins 字段中加上插件对应的文件名（不用加后缀）")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"plugins"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"default_plugin"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"discovery_plugin"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tracing_plugin"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rewrite_plugin"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"demo_plugin"')]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注册 demo_plugin 插件")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h1",{attrs:{id:"插件配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插件配置"}},[t._v("#")]),t._v(" 插件配置")]),t._v(" "),s("p",[t._v("目前插件配置还不支持在后台面板中设置（开发中），需要手动将配置写到 etcd 中，参考 "),s("code",[t._v("t/app/init/etcd_dada.t")]),t._v(" 的 "),s("code",[t._v("=== TEST 1: init route")]),t._v("，在 "),s("code",[t._v("pipelined_requests eval")]),t._v(" 中增加加 request 就可以了（注意同时需要增加 "),s("code",[t._v("response_body eval")]),t._v("）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('{\n    "prefix": "/openapi/demo1",\n    "status": 1,\n    "service_name": "demo1",\n    "protocol": "http",\n    "plugins": [\n        "discovery",\n        "tracing",\n        "rewrite"\n    ],\n    "props": {\n        "rewrite_url_regex" : "^/openapi/(.*)/",\n        "rewrite_replace" : "/openapi/"\n    }\n}\n')])])]),s("p",[t._v("参数解析：")]),t._v(" "),s("ul",[s("li",[t._v("prefix: 匹配路由前缀")]),t._v(" "),s("li",[t._v("status: 1 - 有效；0 - 无效")]),t._v(" "),s("li",[t._v("service_name: 服务名，上游服务节点会通过服务名来查找")]),t._v(" "),s("li",[t._v("protocol: 协议类型（目前支持 http 和 grpc）")]),t._v(" "),s("li",[t._v("plugins: 路由启用的插件")]),t._v(" "),s("li",[t._v("props: 路由参数配置，插件可以读取参数配置执行对应逻辑（例如: rewrite 插件）")])])])}),[],!1,null,null,null);n.default=e.exports}}]);